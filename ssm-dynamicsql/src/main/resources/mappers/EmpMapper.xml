<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="test123.mapper.EmpMapper">
    <!--动态sql，if，通过test属性中的表达式判断标签中的内容是否有效（有效则会拼接到sql语句中）
                where标签 如果where标签中有条件成立，则会直接将其中的有效内容拼接到sql语句中，如果第一个成立的有and则会被截取
                         如果没有一个成立则不会拼接任何一个内容也不会拼接where
                trim     prefix，suffix：在标签中内容前或内容后添加指定内容
                         prefixoverrides，sufferixoverrides；在标签内容前或后去除指定内容
                         choose,when,otherwise
                         choose标签中写when otherwis标签
                         when标签中要是有一个符合条件则其他when就不执行最少设置一个
                         otherwise当when中所有标签都不符合条件时才会开始判断最多设置一个
                sql片段   可以记录一段sql，在需要用的地方使用include标签进行引用
                         -->
    <cache/>

    <select id="getempbyCondition" resultType="Emp">
        select * from emp1
        <trim prefix="where" suffixOverrides="and">
            <if test="empName!=null and empName !=''">
                emp_name =#{empName} and
            </if>
            <if test="age!=null and age!=''">
                age=#{age} and
            </if>
            <if test="gender!=null and gender !=''">
                gender=#{gender} and
            </if>
        </trim>
    </select>
    <select id="getempbyCondition01" resultType="Emp">
        select * from emp1
        <where>
            <if test="empName!=null and empName !=''">
                emp_name =#{empName}
            </if>
            <if test="age!=null and age!=''">
                and age=#{age}
            </if>
            <if test="gender!=null and gender !=''">
                and gender=#{gender}
            </if>
        </where>
    </select>
    <select id="getempbyChoose" resultType="Emp">
        select  <include refid="emoColums"></include> from emp1
        <where>
            <choose>
                <when test="empName !=null and empName!=''">
                    emp_name=#{empName}
                </when>
                <when test="age!=null ande age!=''">
                    age=#{age}
                </when>
                <when test="gender !=null and gender!=''">
                    gender=#{gender}
                </when>
            </choose>
        </where>
    </select>
    <!--    foreach
                    用于批量添加的标签，其中collection表示要访问的接口中的方法形参，用@pram可以较为简单的访问
                                        item表示集合中保存的类型的名称
                                        separator表示每次循环后用什么分割 ','
                                        open以什么开始
                                        close以什么结束-->
    <insert id="insertMpreEmp">
        insert into emp1 values
        <foreach collection="emps" item="emp" separator=",">
            (null,#{emp.empName},#{emp.age},#{emp.gender},null)
        </foreach>
    </insert>

    <delete id="deleteMoreEmp1">
        delete from emp1 where emp_id in
        <foreach collection="empIds" item="empId" separator="," open="(" close=")">
            #{empId}
        </foreach>
    </delete>
    <delete id="deleteMoreEmp">
        delete from emp1 where emp_id =
        <foreach collection="empIds" item="empId" separator="or">
            #{empId}
        </foreach>
    </delete>

    <sql id="emoColums">
        emp_id
        ,emp_name,age,gender,dept_id
    </sql>
</mapper>